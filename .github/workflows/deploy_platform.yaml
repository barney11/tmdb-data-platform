name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_PROJECT_ID: ${{ secrets.TF_VAR_PROJECT_ID }}
      TF_VAR_PROJECT_NUMBER: ${{ secrets.TF_VAR_PROJECT_NUMBER }}
      TF_VAR_TMDB_API_KEY: ${{ secrets.TF_VAR_TMDB_API_KEY }}
      TF_VAR_GCP_CREDENTIALS: ${{ secrets.TF_VAR_GCP_CREDENTIALS }}
      TF_VAR_DATASET_NAME: ${{ secrets.TF_VAR_DATASET_NAME }}
      TF_VAR_DATA_STORAGE_BUCKET_NAME: ${{ secrets.TF_VAR_DATA_STORAGE_BUCKET_NAME }}
      TF_VAR_CF_BUCKET_NAME: ${{ secrets.TF_VAR_CF_BUCKET_NAME }}
      TF_VAR_TF_STATES_BUCKET_NAME: ${{ secrets.TF_VAR_TF_STATES_BUCKET_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.2

      - name: Configure GCP credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - name: Decode JSON secret credentials
        env:
          TF_VAR_GCP_CREDENTIALS: ${{ secrets.TF_VAR_GCP_CREDENTIALS }}
        run: |
          echo "$TF_VAR_GCP_CREDENTIALS" | base64 --decode > decoded.json
          
      - name: Go to terraform files
        run: cd tmdb_data_platform/terraform

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan\
          -var tmdb_api_key=$TF_VAR_TMDB_API_KEY\
          -var gcp_credentials_json=decoded.json\
          -var project_id=$TF_VAR_PROJECT_ID\
          -var project_number=$TF_VAR_PROJECT_NUMBER\
          -var dataset_name=$TF_VAR_DATASET_NAME\
          -var data_storage_bucket_name=$TF_VAR_DATA_STORAGE_BUCKET_NAME\
          -var terraform_states_bucket_name=$TF_VAR_TF_STATES_BUCKET_NAME\
          -var cloud_functions_bucket_name=$TF_VAR_CF_BUCKET_NAME

      - name: Terraform Apply
        run: terraform apply "tfplan"
